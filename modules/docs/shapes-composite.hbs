{{! --------------------------------------------- }}

<h2>Hemisphere</h2>

<p>A spherical hemisphere. Set size with <code>diameter</code>. Set the color of the base ellipse with <code>baseColor</code>. Defaults: <code>diameter: 1, fill: true</code>. The origin of the hemisphere is the center of the base. The dome faces outward toward the front.</p>

<div class="example" data-js="evalShapeDemo">
  <div class="example__code">
    ``` js
    const dome = new Zdog.Hemisphere({
      addTo: illo,
      diameter: 120,
      // fill enabled by default
      // disable stroke for crisp edge
      stroke: false,
      color: '#C25',
      baseColor: '#EA0',
    });
    ```
  </div>
  <div class="example__demo">
    <canvas class="illo" width="240" height="240"></canvas>
  </div>
</div>

{{! --------------------------------------------- }}

<h2>Cone</h2>

<p>A square cylinder with circular bases. Set size with <code>diameter</code> and <code>length</code>. Default <code>diameter: 1, length: 1, fill: true</code>. Set the color of the base ellipse with <code>baseColor</code>. The origin of the hemisphere is the center of the base. The dome faces front toward positive z-axis.</p>

<div class="example" data-js="evalShapeDemo">
  <div class="example__code">
    ``` js
    const partyHat = new Zdog.Cone({
      addTo: illo,
      diameter: 70,
      length: 90,
      stroke: false,
      color: '#636',
      baseColor: '#C25',
    });
    ```
  </div>
  <div class="example__demo">
    <canvas class="illo" width="240" height="240"></canvas>
  </div>
</div>

{{! --------------------------------------------- }}

<h2>Cylinder</h2>

<p>A square cylinder with circular bases. Set size with <code>diameter</code> and <code>length</code>. Default <code>diamter: 1, length: 1, fill: true</code>. Set the color of the base ellipse with <code>baseColor</code>. The origin of the cylinder is the center of its length. The cylinder is oriented front-to-back along the z-axis.</p>

<div class="example" data-js="evalShapeDemo">
  <div class="example__code">
    ``` js
    const can = new Zdog.Cylinder({
      addTo: illo,
      diameter: 80,
      length: 120,
      stroke: false,
      color: '#C25',
      baseColor: '#E62',
    });
    ```
  </div>
  <div class="example__demo">
    <canvas class="illo" width="240" height="240"></canvas>
  </div>
</div>

{{! --------------------------------------------- }}

<h2>Box</h2>

<p>A rectangular prism. Set size with <code>width</code>, <code>height</code>, and <code>depth</code>. Set face colors with face options: <code>frontFace</code>, <code>rearFace</code>, <code>leftFace</code>, <code>rightFace</code>, <code>topFace</code>, and <code>bottomFace</code>.</p>

<div class="example" data-js="evalShapeDemo">
  <div class="example__code">
    ``` js
    const can = new Zdog.Box({
      addTo: illo,
      width: 120,
      height: 100,
      depth: 80,
      stroke: false,
      color: '#C25',
      left: '#E62',
      right: '#E62',
      back: '#EA0',
      top: '#ED0',
      bottom: '#636',
    });
    ```
  </div>
  <div class="example__demo">
    <canvas class="illo" width="240" height="240"></canvas>
  </div>
</div>

<p>Remove face shapes by disabling face options.</p>

<div class="example" data-js="evalShapeDemo">
  <div class="example__code">
    ``` js
    const can = new Zdog.Box({
      addTo: illo,
      width: 120,
      height: 100,
      depth: 80,
      stroke: false,
      color: '#C25',
      // remove left & right faces
      left: false,
      right: false,
      back: '#EA0',
      top: '#ED0',
      bottom: '#636',
    });
    ```
  </div>
  <div class="example__demo">
    <canvas class="illo" width="240" height="240"></canvas>
  </div>
</div>
