<h2>Shape</h2>

<p>A visible shape. <code>Shape</code> is the super-class for all shape classes — <a href="shapes#rect"><code>Rect</code></a>, <a href="shapes#ellipse"><code>Ellipse</code></a>, <a href="shapes#cone"><code>Cone</code></a>, etc. All shape classes can use <code>Shape</code> options and methods.</p>

{{! --------------------------------------------- }}

<h3>color</h3>

<p>Sets shape stroke and fill color. Set to any color string — hex code, <code>rgb()</code>, <code>hsla()</code>, etc. Default <code><span class="comment">color: '#333'</span></code>.</p>

<div class="example">
  <div class="example__code">
    ``` js
    color: '#E62'
    ```
  </div>
  <div class="example__demo">
    <canvas data-js="shapeOption" class="illo" width="240" height="240"></canvas>
    {{> edit-demo penSlug="wbPQMd"}}
  </div>
</div>

{{! --------------------------------------------- }}

<h3>stroke</h3>

<p>Renders the shape line and sets line width. Default <code><span class="comment">stroke: 1</span></code>.</p>

<div class="example">
  <div class="example__code">
    ``` js
    stroke: 30
    ```
  </div>
  <div class="example__demo">
    <canvas data-js="shapeOption" data-options='{ "stroke": 30 }'
        class="illo" width="240" height="240"></canvas>
    {{> edit-demo penSlug="eaeQJL"}}
  </div>
</div>

<p>Set <code>stroke</code> to <code><span class="number">0</span></code> or <code><span class="literal">false</span></code> to disable.</p>

<div class="example">
  <div class="example__code">
    ``` js
    // render only fill
    stroke: false,
    fill: true,
    ```
  </div>
  <div class="example__demo">
    <canvas data-js="shapeOption" data-options='{ "stroke": false, "fill": true }'
        class="illo" width="240" height="240"></canvas>
    {{> edit-demo penSlug="JqOeGq"}}
  </div>
</div>

{{! --------------------------------------------- }}

<h3>fill</h3>

<p>Renders the inner shape area. Disabled by default <code><span class="comment">fill: false</span></code>.</p>

<div class="example">
  <div class="example__code">
    ``` js
    fill: true
    ```
  </div>
  <div class="example__demo">
    <canvas data-js="shapeOption" data-options='{ "fill": true }'
        class="illo" width="240" height="240"></canvas>
    {{> edit-demo penSlug="EzbOKr"}}
  </div>
</div>

{{! --------------------------------------------- }}

<h3>closed</h3>

<p>Closes the path from the last point back to the first. Enabled by default <code><span class="comment">closed: true</span></code>.</p>

<div class="example">
  <div class="example__code">
    ``` js
    closed: false
    ```
  </div>
  <div class="example__demo">
    <canvas data-js="shapeOption" data-options='{ "closed": false }'
        class="illo" width="240" height="240"></canvas>
    {{> edit-demo penSlug="BemGzW"}}
  </div>
</div>

{{! --------------------------------------------- }}

<h3>visible</h3>

<p>Shows or hides shape. Does not affect child items. Enabled by default <code><span class="comment">visible: true</span></code>.</p>

{{! --------------------------------------------- }}

<h3>backface</h3>

<p>Shows or hides the shape when its backface is visible. Enabled by default <code><span class="comment">backface: true</span></code>.</p>

<p>Set <code>backface: false</code> to hide the shape when its backface is showing.</p>

<div class="example">
  <div class="example__code">
    ``` js
    backface: false
    ```
  </div>
  <div class="example__demo">
    <canvas data-js="shapeBackface"
        class="illo" width="240" height="240"></canvas>
    {{> edit-demo penSlug="GaOwvr"}}
  </div>
</div>

<p>Set <code>backface</code> to a color to change the shape&rsquo;s color when its backface is showing.</p>

<div class="example">
  <div class="example__code">
    ``` js
    backface: "#636"
    ```
  </div>
  <div class="example__demo">
    <canvas data-js="shapeBackface" data-backface="#636"
        class="illo" width="240" height="240"></canvas>
    {{> edit-demo penSlug="zQPMdX"}}
  </div>
</div>

{{! --------------------------------------------- }}

<h3>front</h3>

<p>A <a href="#vector"><code>Vector</code></a> used to determine where the front of the shape is. Useful for changing how <a href="#shape-backface"><code>backface</code></a> works for custom <code>Shape</code>s. Default <code>front: { z: 1 }</code>. </p>

{{! --------------------------------------------- }}

<h3>updatePath()</h3>

<p>Updates the shape path. Trigger <code>updatePath()</code> after you change a point on a <code>Shape</code>'s path, a <code>Rect</code>'s width or height, etc.</p>

<div class="example">
  <div class="example__code">
    ``` js
    let triangle = new Zdog.Shape({...});
    // get first path point
    let trianglePoint = triangle.path[0];
    let dragStartX, dragStartY;

    // drag to change path point
    new Zdog.Dragger({
      onDragStart: function() {
        dragStartX = trianglePoint.x;
        dragStartY = trianglePoint.y;
      },
      onDragMove: function( pointer, moveX, moveY ) {
        trianglePoint.x = dragStartX + moveX;
        trianglePoint.y = dragStartY + moveY;
        // path point changed, updatePath() to apply change
        triangle.updatePath();
      },
    });
    ```
  </div>
  <div class="example__demo">
    <canvas data-js="shapeUpdatePath"
        class="illo" width="240" height="240"></canvas>
    {{> edit-demo penSlug="PvOxQj"}}
  </div>
</div>

{{! --------------------------------------------- }}
